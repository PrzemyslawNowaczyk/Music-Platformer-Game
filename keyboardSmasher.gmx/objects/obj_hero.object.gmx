<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_runner</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>start_position_beat = 0;

horizontal_speed = 0;
horizontal_max_speed = 9;
next_y = y;
next_x = x;
vertical_direction = DOWNWARDS;
horizontal_direction = 1;

movement_type = RUN;
jump_start_y = y;
jump_start_beat = 0;
short_jump_height = 224;
short_jump_length = 2;
jump_actual_length = 0;
jump_actual_height = 0;

fall_start_y = y;
fall_start_beat = 0;
fall_height = 320;
fall_length = 2;
fall_actual_height = 320;
fall_actual_length = 2;

dash_start_x = -1000;
dash_start_beat = -200;
dash_length = 1;
dash_actual_length = 0;
dash_available = false;
dash_speed_multiplier = 1.2;
dash_actual_cooldown = 0.45;
dash_cooldown = 0.45;

slide_start_beat = 0;
slide_length = 0.2;
slide_actual_length = 0;
slide_available = true;

jump_input_edge = 0;
dash_input_edge = 0;
slide_input_edge = 0;
slide_input_constant = 0;
left_input_constant = 0;
right_input_constant = 0;

sprite_index = spr_runner;
mask_index = spr_mask_big;
mask_w = MASK_WIDTH;
mask_h = MASK_BIG_HEIGHT;

animation_speed = 1;
animation_start_x = 0;
animation_start_beat = 0;
sprite_rotation = 0;

platform = noone;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(next_y-y) &gt; mask_h*1.3){
    event_perform(ev_other, EVENT_DIE);
}

y = next_y;

/************************************************************
    KOLIZJE POZIOME
************************************************************/

if ( place_meeting(next_x,y, obj_collidable_dynamic)){
    var inst = instance_place(next_x,y, obj_collidable_dynamic);
    if (inst.x &gt; x){
        next_x = inst.bbox_left-MASK_WIDTH/2;
        horizontal_speed = 0;
    }
    else{
        next_x = inst.bbox_right+MASK_WIDTH/2+1;
        horizontal_speed = 0;
    }
}

var counter = 0;

while ( place_meeting(next_x,y, obj_collidable) &amp;&amp; abs(counter) &lt;= mask_w){
       next_x -= sign(next_x-x)/2;
       horizontal_speed = 0;
       counter += 1/2;
   }
   
if (abs(next_x-x) &gt; mask_w){
    //event_perform(ev_other, EVENT_DIE);
}
   
x = next_x;

             
image_index = (floor(animation_speed*global.room_controller.beats*image_number-animation_start_beat)) mod image_number;

if (sprite_index == spr_ball){
    sprite_rotation = -2*x;
}
else{
    sprite_rotation = 0;
}

image_xscale = (movement_type == SLIDE) + (movement_type != SLIDE) * (sign(horizontal_speed) + sign(horizontal_direction)*(horizontal_speed == 0));
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>enviroment_vertical_speed = 0;
enviroment_horizontal_speed = 0;
enviroment_speed_factor = 1;
platform_vertical_speed = 0;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>switch (movement_type)
{
    case RUN:
        event_perform(ev_other, EVENT_RUN);
        break;

    case JUMP:
        event_perform(ev_other, EVENT_JUMP);
        break;
        
    case DASH:
        event_perform(ev_other, EVENT_DASH);
        break;

    case SLIDE:
        event_perform(ev_other, EVENT_SLIDE);
        break;
        
    case FALL:
        event_perform(ev_other, EVENT_FALL);
        break;
}


/*************************************************************************************************
    obsluga ruchu
*************************************************************************************************/

if (movement_type != DASH){
    if (right_input_constant != left_input_constant){
        horizontal_direction = (right_input_constant - left_input_constant);
        //horizontal_max_speed = ((global.room_controller.music_controller.tempo/60)/room_speed) * 8 * 32 * 1.2;
        horizontal_speed = clamp(-horizontal_max_speed, horizontal_speed + horizontal_direction/2, horizontal_max_speed);
    }
    else{
        if (abs(horizontal_speed) &lt; 1)
            horizontal_speed = 0;
        else
            horizontal_speed -= sign(horizontal_speed)/2;
    }
}


/*************************************************************************************************
    obsluga skokow
*************************************************************************************************/

if (jump_input_edge &gt; 0 
    &amp;&amp; (on_ground(x,next_y,id) || on_platform(x,next_y,id))
    &amp;&amp; !touch_ceiling(x,next_y,id) &amp;&amp; !under_platform(x,next_y,id)
    &amp;&amp; (movement_type == RUN || movement_type == SLIDE) ){
        hero_start_jump(id, short_jump_length, short_jump_height - platform_vertical_speed/4 );
}


/*************************************************************************************************
    obsluga szybowania
*************************************************************************************************/

if (dash_input_edge &gt; 0 &amp;&amp; dash_available){
    hero_start_dash(id, dash_length);
}


/*************************************************************************************************
    obsluga slizgu
*************************************************************************************************/

if (slide_input_edge &gt; 0 &amp;&amp; movement_type == RUN){
    hero_start_slide(id, slide_length);
}




if (dash_start_beat + dash_length + dash_actual_cooldown &lt;= global.room_controller.beats ){
    dash_available = true;
    dash_actual_cooldown = dash_cooldown;
}

next_x = x+horizontal_speed;

jump_input_edge -= (global.current_time_controller.frame_time/1000);
dash_input_edge -= (global.current_time_controller.frame_time/1000);
slide_input_edge -= (global.current_time_controller.frame_time/1000);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="16">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>die</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var inst = global.room_controller.camera_controller;
if (inst != noone){
    inst.shake_x = 15;
    inst.shake_y = 15;
    effect_create_above(ef_firework,x,y, 1, c_yellow);
    effect_create_above(ef_firework,x+16,y, 1, c_yellow);
    effect_create_above(ef_firework,x-16,y, 1, c_yellow);
    effect_create_above(ef_firework,x,y-16, 1, c_yellow);
    effect_create_above(ef_firework,x,y+16, 1, c_yellow);
    instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="15">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>run</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (abs(horizontal_speed) &lt; 3){
    sprite_index = spr_stand;
}
else{
    if (sign(horizontal_speed) == ((-1)*right_input_constant + left_input_constant)
    || horizontal_speed != 0 &amp;&amp; right_input_constant == left_input_constant){
        sprite_index = spr_brake;
    }
    else{
        sprite_index = spr_runner;
    }
}

//Przelacznik w razie kontaktu z ziemia - decyduje, czy podlaczac bohatera do platformy
if (on_ground(x,next_y,id)){
    if (place_meeting(x,next_y,obj_collidable_dynamic)){
        platform = instance_place(x,next_y,obj_collidable_dynamic);
    }
    else{
        platform = noone;
    }
}


if (platform == noone){ //jezeli bohater NIE jest podlaczony dlo platformy
    if (!on_ground(x,next_y,id)){
        hero_start_fall(id, fall_length, fall_height);
    }
}
else{           //jezeli bohater jest podlaczony dlo platformy
    //next_y = platform.bbox_top-mask_h/2;
    next_y = y_stand_on(next_x, next_y, platform);
    if (bbox_left &gt; platform.bbox_right || bbox_right &lt; platform.bbox_left){
        platform = noone;
        hero_start_fall(id, fall_length, fall_height);
    }
}

while (on_ground(x,next_y-1,id)){
    next_y = floor(next_y - 1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="14">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>slide</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (on_ground(x,next_y,id)){
    if (place_meeting(x,next_y,obj_collidable_dynamic)){
        platform = instance_place(x,next_y,obj_collidable_dynamic);
    }
    else{
        platform = noone;
    }
}

if (platform == noone){ //jezeli bohater NIE jest podlaczony dlo platformy
    if (!on_ground(x,next_y,id)){
        hero_start_fall(id, fall_length, fall_height);
    }
}
else{           //jezeli bohater jest podlaczony dlo platformy
    next_y = y_stand_on(next_x, next_y, platform);
    //event_perform(ev_other, EVENT_OUT_FROM_OBJECT);
    if (bbox_left &gt; platform.bbox_right || bbox_right &lt; platform.bbox_left){
        platform = noone;
        hero_start_fall(hero_0, fall_length, fall_height);
    }
}


if (global.room_controller.beats &gt; slide_start_beat + slide_actual_length ){
    if (touch_ceiling(next_x,next_y,id) || under_platform(next_x,next_y,id) || slide_input_constant){
        slide_actual_length += 0.2;
    }
    else{
        hero_start_run(id);
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="13">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>fall</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next_y = fall_start_y + 4*(fall_actual_height/(fall_actual_length*fall_actual_length))*(global.room_controller.beats - fall_start_beat)*(global.room_controller.beats - fall_start_beat);

if (on_platform(next_x, next_y, id)){
    platform = instance_place(next_x,next_y+1,obj_collidable_dynamic);
    next_y = y_stand_on(next_x,next_y,platform);
    hero_start_run(id);
}

while (under_platform(next_x, next_y, id)){
    fall_start_y++;
    next_y = fall_start_y + 4*(fall_actual_height/(fall_actual_length*fall_actual_length))*(global.room_controller.beats - fall_start_beat)*(global.room_controller.beats - fall_start_beat);
}

var ground_touched = false;

if (on_ground(next_x, next_y, id)){
    var inst = instance_place(next_x,next_y+1,obj_collidable);
    next_y = y_stand_on(next_x,next_y,inst);
    hero_start_run(id);
}

if (ground_touched){
    hero_start_run(id);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="12">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>dash</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (global.room_controller.beats &lt; dash_start_beat + dash_actual_length ){
    next_y = y;
    //horizontal_max_speed = ((global.room_controller.music_controller.tempo/60)/room_speed) * 8 * 32 * 1.5;
    horizontal_speed = horizontal_max_speed*horizontal_direction*dash_speed_multiplier;    
    event_perform(ev_other, EVENT_OUT_FROM_OBJECT);
}
else{
    event_perform(ev_other, EVENT_OUT_FROM_OBJECT);
    
    var tc = touch_ceiling(next_x,next_y,id);
    var up = under_platform(next_x,next_y,id);
    var og = on_ground(next_x,next_y,id);
    var op = on_platform(next_x,next_y,id);

    if ((tc || up) &amp;&amp; (og || op)){
        dash_actual_length += 0.2;
    }
    else{
        mask_index = spr_mask_big;
        
        if (og){
            var inst = instance_place(x,next_y+1,obj_collidable);
            next_y = y_stand_on(next_x, next_y, inst);
        }
        if (tc){
            var inst = instance_place(x,next_y-1,obj_collidable);
            next_y = y_stand_under(next_x, next_y, inst);
        }
        if (op){
            platform = instance_place(x,next_y+1,obj_collidable_dynamic);
            next_y = y_stand_on(next_x, next_y, platform);
        }
        if (up){
            platform = instance_place(x,next_y-1,obj_collidable_dynamic);
            next_y = y_stand_under(next_x, next_y, platform);
            platform = noone;
        }

        og = on_ground(next_x,next_y,id);
        op = on_platform(next_x,next_y,id);

        if (og || op){
            hero_start_run(id);
        }
        else{
            hero_start_fall(id, fall_length, fall_height);  
        }
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>jump</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>next_y = jump_start_y 
        + (4*(jump_actual_height/(jump_actual_length*jump_actual_length))
            *power((global.room_controller.beats - jump_start_beat), 2)
        - 4*(global.room_controller.beats - jump_start_beat)
            *(jump_actual_height/jump_actual_length) );

if (on_ground(next_x, next_y, id) || on_platform(next_x, next_y, id)){
    event_perform(ev_other, EVENT_OUT_FROM_OBJECT);
    hero_start_run(id);
}
else if (touch_ceiling(next_x, next_y, id) || under_platform(next_x, next_y, id)){
    event_perform(ev_other, EVENT_OUT_FROM_OBJECT);
    hero_start_fall(id, fall_length, fall_height);
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>out of objects</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (on_platform(next_x, next_y,id)){
    platform = instance_place(next_x, next_y+1, obj_collidable_dynamic);
    next_y = y_stand_on(0,0,platform);
}

if (under_platform(next_x, next_y,id)){
    var inst = instance_place(next_x, next_y-1, obj_collidable_dynamic);
    next_y = y_stand_under(0,0,inst);
}

if (on_ground(next_x, next_y,id)){
    var inst = instance_place(next_x, next_y+1, obj_collidable);
    next_y = y_stand_on(0,0,inst);
}

if (touch_ceiling(next_x, next_y,id)){
    var inst = instance_place(next_x, next_y-1, obj_collidable);
    next_y = y_stand_under(0,0,inst);
}

if (place_meeting(next_x, next_y, obj_collidable)
    || place_meeting(next_x, next_y, obj_collidable_dynamic)){
    event_perform(ev_other, EVENT_DIE);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_sprite_ext(sprite_index,image_index,x,y,image_xscale,image_yscale,sprite_rotation,image_blend,image_alpha);

if (global.room_controller.beats - dash_start_beat &lt; sprite_get_number(spr_smoke)/10){
    draw_sprite_ext(spr_smoke, (global.room_controller.beats-dash_start_beat)*10, dash_start_x,y,1,1,0,image_blend,1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
