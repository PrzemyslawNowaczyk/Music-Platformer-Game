<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_spring</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collidable</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>spring_jump_short_height = 160;
spring_jump_short_length = 1;
spring_jump_long_height = 352;
spring_jump_long_length = 2;
spring_fall_height = 320;
spring_fall_length = 1;
image_speed = 0;
activation_beat = -500;
sound_pitch = -1;
touched = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (place_meeting(x,y-10*sign(179-image_angle),obj_hero)){
    var inst = instance_place(x,y-10*sign(179-image_angle),obj_hero);
    
    if (!touched || (inst.movement_type != JUMP &amp;&amp; inst.movement_type != FALL)){
    
        if (sound_pitch == -1){
            audio_sound_pitch(snd_spring, random_range(1.1, 1.3));
        }
        else{
            audio_sound_pitch(snd_spring, sound_pitch);
        }
        
        audio_play_sound(snd_spring,20,0);
        activation_beat = global.room_controller.beats;
        inst.dash_actual_cooldown = 0.2;
        
        if ( sign(179-image_angle) &gt; 0 )
        {
            if (inst.jump_input_edge &lt;= 0){
                hero_start_jump(inst, spring_jump_short_length, spring_jump_short_height);
            }
            else{
                hero_start_jump(inst, spring_jump_long_length, spring_jump_long_height);
            }
        }
        else{
            hero_start_fall(inst, spring_fall_length, spring_fall_height);
        }
    }
    
    touched = true;
}
else{
    touched = false;
}

image_index = max (0, (1 - (global.room_controller.beats - activation_beat)) * 10);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
