<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_smasher</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_collidable_dynamic</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
active = false;
step = 0;
hit_ground = false;
back_pixels = 32;
y_start = y;
y_end = y + 300;
run_time = 1;
back_time = 1;
beat_start = 0;
sound_played = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (active){
    if (global.room_controller.beats &lt; beat_start + run_time){
        y = y_start + (y_end-y_start) * ((global.room_controller.beats - beat_start)/ run_time);
    }
    else{
        if (place_meeting(x,y+16,obj_collidable) || place_meeting(x,y+1,obj_collidable_dynamic)){
            hit_ground = true;
            if (!sound_played){
                global.room_controller.camera_controller.shake_y = 9;
                audio_play_sound(snd_heavy_fall, 60,0);
                sound_played = true;
            }
        }
        if (global.room_controller.beats &lt; beat_start + run_time + back_time){
            y = y_end - (back_pixels * sign(y_end-y_start)) * ((global.room_controller.beats - beat_start - run_time)/ back_time);
        }
        else{
            y = y_end - (back_pixels * sign(y_end-y_start));
            active = false;
            sound_played = false;
        }
    }
}
else{
    beat_start = global.room_controller.beats;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
